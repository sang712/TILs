'''
조건
1 ≤ K ≤ 108 인 정수
1 ≤ P ≤ 108 인 정수
1 ≤ N ≤ 1016 인 정수

풀이
Softeer에서 제공하는 알고리즘 강의를 보고 문제를 풀었음
그냥 for문을 사용해서 N*10회만큼 반복하면 시간복잡도를 초과하기 때문에
재귀를 이용하라고 하였음
재귀를 이용하게 되면 O(logn)의 시간복잡도를 갖기 때문에 제한시간 내에 풀 수 있음
단 재귀를 이용할 때 함수를 호출하여 반환하는 것이 아니라 함수는 한번만 호출하고
이것을 변수에 넣어서 변수를 사용하라는 주의가 있었음
재귀를 멈출 조건(N=1)을 설정하고 짝수와 홀수의 경우로 나눠서 계산하고 반환하였음

+)
처음에 square함수 안에다가 K를 사용하였는데, 정의하고자 한 함수의 의미가 퇴색되는 실수였음
게다가 이곳 저곳에 집어넣어서 틀린 답을 도출하였음
함수를 제대로 이해하지 않고 따라 만든 셈이라 생긴 문제
함수에 K를 모두 제외시키고 마지막에 한번만 곱해서 print 하였더니 정답처리가 되었음
'''

import sys
K, P, N = map(int, input().split())

def square(p, n):
    if n == 1:
        return p
    else:
        f = square(p, n//2)
        if n%2:
            return (f*f*p)%1000000007
        else:
            return (f*f)%1000000007
print((square(P, N*10)*K)%1000000007)